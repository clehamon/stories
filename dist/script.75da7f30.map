{"version":3,"sources":["script.js"],"names":["recordAudio","Promise","resolve","navigator","mediaDevices","getUserMedia","audio","stream","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","console","log","start","stop","audioBlob","Blob","audioUrl","URL","createObjectURL","Audio","play","recorder","recordStop","document","querySelector","textContent","removeAttribute","playAudio"],"mappings":"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","file":"script.75da7f30.map","sourceRoot":"..","sourcesContent":["// console.log(\"ok\");\n//\n// const audioChunks = [];\n// var mediaRecorder = null;\n//\n// function recordAudio(){\n//\n//   navigator.mediaDevices.getUserMedia({ audio: true })\n//   .then(stream => {\n//     mediaRecorder = new MediaRecorder(stream);\n//     mediaRecorder.start();\n//     console.log(\"recording\");\n//\n//     mediaRecorder.addEventListener(\"dataavailable\", event => {\n//       audioChunks.push(event.data);\n//     });\n//\n//     mediaRecorder.addEventListener(\"stop\", () => {\n//       console.log(\"stopping\");\n//\n//       const audioBlob = new Blob(audioChunks);\n//       const audioUrl = URL.createObjectURL(audioBlob);\n//       const audio = new Audio(audioUrl);\n//       console.log(\"playing\");\n//\n//       audio.play();\n//     });\n//   });\n//\n// }\n//\n// function stopRecording(){\n//   mediaRecorder.stop();\n// }\n\n\nconst recordAudio = () =>\n  new Promise(async resolve => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    const mediaRecorder = new MediaRecorder(stream);\n    const audioChunks = [];\n\n    mediaRecorder.addEventListener(\"dataavailable\", event => {\n      audioChunks.push(event.data);\n      console.log(event.data);\n    });\n\n    const start = () => mediaRecorder.start();\n\n    const stop = () =>\n      new Promise(resolve => {\n        mediaRecorder.addEventListener(\"stop\", () => {\n          const audioBlob = new Blob(audioChunks);\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const audio = new Audio(audioUrl);\n          const play = () => audio.play();\n          resolve({ audioBlob, audioUrl, play });\n        });\n\n        mediaRecorder.stop();\n      });\n\n    resolve({ start, stop });\n  });\n\nlet recorder = null;\nlet audio = null;\n\nconst recordStop = async () => {\n  if (recorder) {\n    audio = await recorder.stop();\n    recorder = null;\n    document.querySelector(\"#record-stop-button\").textContent = \"Record\";\n    document.querySelector(\"#play-audio-button\").removeAttribute(\"disabled\");\n  } else {\n    recorder = await recordAudio();\n    recorder.start();\n    document.querySelector(\"#record-stop-button\").textContent = \"Stop\";\n  }\n};\n\nconst playAudio = () => {\n  if (audio && typeof audio.play === \"function\") {\n    console.log(\"PLAY\");\n    audio.play();\n  }\n};\n\n\n\n// document.getElementById(\"record-stop-button\").addEventListener (\"click\", recordAudio, false);\n// document.getElementById(\"play-audio-button\").addEventListener (\"click\", playAudio, false);\n"]}